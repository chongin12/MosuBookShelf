package com.example.mosubookshelfimport android.os.Bundleimport androidx.activity.ComponentActivityimport androidx.activity.compose.setContentimport androidx.activity.enableEdgeToEdgeimport androidx.compose.foundation.layout.*import androidx.compose.material3.*import androidx.compose.runtime.*import androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.tooling.preview.Previewimport com.example.mosubookshelf.models.BottomNavigationItemTypeimport com.example.mosubookshelf.ui.theme.MosuBookShelfThemeclass MainActivity : ComponentActivity() {    private val bottomNavigationItems = BottomNavigationItemType.entries    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        enableEdgeToEdge()        setContent {            MosuBookShelfTheme {                val selectedItemState = remember { mutableStateOf(BottomNavigationItemType.NEW) }                Scaffold(modifier = Modifier.fillMaxSize(), bottomBar = {                    BottomAppBar {                        BottomNavigationBar(bottomNavigationItems, selectedItemState)                    }                }) { innerPadding ->                    Box(                        modifier = Modifier.padding(innerPadding),                        contentAlignment = Alignment.Center                    ) {                        when (selectedItemState.value) {                            BottomNavigationItemType.NEW -> NewBooksScreen()                            BottomNavigationItemType.SEARCH -> SearchBooksScreen()                        }                    }                }            }        }    }}@Preview(showBackground = true)@Composablefun NewBooksScreenPreview() {    val bottomNavigationItems = BottomNavigationItemType.entries    val selectedItemState = remember { mutableStateOf(BottomNavigationItemType.NEW) }    BottomNavigationBar(bottomNavigationItems, selectedItemState)}@Composablefun NewBooksScreen(modifier: Modifier = Modifier) {    Text(        text = "NewBooks screen",        modifier = modifier,    )}@Composablefun SearchBooksScreen(modifier: Modifier = Modifier) {    Text(        text = "SearchBooks screen",        modifier = modifier,    )}